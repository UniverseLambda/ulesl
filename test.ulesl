# feature("allow_var_shadowing", "implicit_variable");

let its_a_var = 5;
# var its_another_var = exec();

# Testing conditions
if true { println("PRINTED"); }
if false { println("NOT PRINTED"); }

# Testing comparison operators

## Everything should be printed here
if 5 == 5 { println("IT WORKS 0"); }
if 1 < 5 { println("IT WORKS 1"); }
if 5 > 1 { println("IT WORKS 2"); }
if 5 >= 5 { println("IT WORKS 3"); }
if 5 <= 5 { println("IT WORKS 4"); }

## Nothing should be printed here
if 5 != 5 { println("NOT WORKING 0"); }
if 5 > 5 { println("NOT WORKING 1"); }
if 5 >= 6 { println("NOT WORKING 2"); }
if 6 < 5 { println("NOT WORKING 3"); }
if 6 <= 5 { println("NOT WORKING 4"); }

println(its_a_var);

its_a_var = "MDR";

fn my_func() {
	println("Okayyyy");
}

fn my_func_with_param(param) {
	println("param:", param);
}

exec(["pipe"], "echo", "hello");
exec(["no_status"], "grep", "BONCHOUR");

println("Hahahaha");

my_func();
my_func();
println("Nope");
my_func();
my_func_with_param(its_a_var);
